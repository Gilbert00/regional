#!/bin/bash
#
# v 0.0.6
#

#set -x

readonly Err="***Error***:"

#readonly ImagesFile=/tmp/$(basename $0)_images_$$.tmp

readonly DirLog="/usr/openv/netbackup/logs/user_ops"
readonly ImageData="/tmp/$(basename $0)_image_$$.tmp"

readonly cBeforeImport=0
readonly cAfterImport1=1
readonly cAfterImport2=2
readonly cAfterDupl=3
readonly cAfterDiskDel=4

Copy=0
Retn=0

function check_dir() {
# $Dir

	if [[ ! -d /$1 ]]; then
		echo "$Err Directory /$1 don't exists !"
		exit 10
	fi
}

function get_image_data() {
# $Image $ImageData

	/usr/openv/netbackup/bin/admincmd/bpimagelist -backupid $1 -option INCLUDE_PRE_IMPORT -l > $2 2>&1
#	/usr/openv/netbackup/bin/admincmd/bpimagelist -backupid $1 -l > $2 2>&1
}

readonly ImMediaData="/tmp/$(basename $0)_immedia_$$.tmp"

function check_bpimmedia() {
#	$ImageDir $Image

	local ImgDir=$1
	local Img=$2
	/usr/openv/netbackup/bin/admincmd/bpimmedia -dt 1 -mediaid $ImgDir -l -option ONLY_PRE_IMPORT > $ImMediaData 2>&1 
	local N=$(grep -c "$Img" $ImMediaData)
	if [ $N -gt 0 ]; then
	  echo "1"
	else
		echo "0"
	fi
}

readonly cMediaTypeDisk=0
readonly cMediaTypeTape=2

function get_image_status() {
# $Image

#  local Status=0
	
	get_image_data $1 $ImageData

	local N=$(grep -c 'no entity was found' $ImageData)
	if [ $N -gt 0 ]; then
#		local Nimm=$(check_bpimmedia $ImageDir $Image)
		return 0
	fi

	N=$(grep "^IMAGE" $ImageData | awk '{print $29}')
	[[ $N -eq 1 ]] && return 1
	
	local NCopies=$(grep '^IMAGE' $ImageData | awk '{print $21}')
	if [ $NCopies -eq 0 ]; then	# ???
		return 1
	elif [ $NCopies -eq 1 ]; then	
	  local MediaType=$(grep '^FRAG' $ImageData | awk '{if ($3==1) print $6}')
		if [ $MediaType -eq $cMediaTypeDisk ]; then
			Retn=$(grep '^IMAGE' $ImageData | awk '{print $13}')
			Copy=$(grep '^FRAG' $ImageData | awk '{if ($3==1) print $2}')
			return 2
		else	# $MediaType -eq $cMediaTypeTape
			return 4
		fi
	fi
	
	return 3	# $NCopies -eq 2
}

for Dir in adisk bdisk cdisk
do
	check_dir $Dir

	ImagesFile="$(basename $0)_$Dir.out"
	StatusFile="$(basename $0)_${Dir}_status.txt"
#	find /$Dir -name "*.img*" -print | awk -F_ '{if ($4=="F1" || $4~/^F1\./) print $1"_"$2}' | awk -F/ '{print $NF}' > $ImagesFile
	find /$Dir -name "*.img" -print | awk -F_ '{if ($4=="F1" || $4~/^F1\./) print $1"_"$2}' > $ImagesFile
	
	[[ -f $StatusFile ]] && rm $StatusFile
	while read ImageRecord
	do
	  Image=$(echo $ImageRecord | xargs basename)
		ImageDir=$(echo $ImageRecord | xargs dirname)

#		checking info files existence		
		Ninfo=$(ls -l $ImageRecord*.info | grep -c "$Image")
		if [[ $Ninfo -eq 0 ]]; then
			echo "$Err info files are absent for $ImageDir/$Image !"
			continue
		fi
		
		get_image_status $Image
		ImageStatus=$?
		echo "$ImageStatus $Image" >> $StatusFile
	
	done < $ImagesFile
done

exit 0

